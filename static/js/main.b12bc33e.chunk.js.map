{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.b12bc33e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n  <strong> {capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n</div>\r\n\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark': 'light' }`}>\r\n       <input className=\"form-check-input me-2\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n       <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired ,\r\naboutText : PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Set here title' ,\r\naboutText : 'set about here'\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick =() =>{\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Coverted to UpperCase!\",\"success\");\r\n  }\r\n  const handleLoClick =() =>{\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Coverted to LowerCase!\",\"success\");\r\n\r\n  }\r\n  const handleClearClick =() =>{\r\n    console.log(\"Clear was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText)\r\n    props.showAlert(\"Text Cleared!\",\"success\");\r\n  }\r\n  const handleCopy=() =>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n\r\n  }\r\n  const handleRemove =() =>{\r\n    let newText = text.split(/ [ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces Removed!\",\"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) =>{\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n\r\n  const [text, setText] = useState('')\r\n  return (\r\n    <>\r\n    <div className=\"container\" style= {{color : props.mode === 'dark'?'white': 'black' }}>\r\n        <h1> {props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n  <textarea className=\"form-control\"value={text} onChange={handleOnChange} style={{backgroundColor : props.mode === 'dark'?'#252939': 'white' , color : props.mode === 'dark'?'white': 'black'  }} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UPPERCASE</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleRemove}>Remove Extra Space</button>\r\n\r\n   \r\n    </div>\r\n    <div className='container my-3' style= {{color : props.mode === 'dark'?'white': 'black' }}>\r\n      <h1>Your Text Summary</h1>\r\n      <p>\r\n        {text.split(\" \").length} words and {text.length} Characters.\r\n      </p>\r\n      <p>\r\n      {0.008 * text.split(\" \").length} Minutes read\r\n      </p>\r\n      <h2>\r\n        Preview\r\n      </h2>\r\n      <p>{text.length>0?text:\"Enter Something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    \n  })\n  \n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n  }\n  const toggleMode = () =>{\n    if (mode === 'light') {\n     setMode('dark');\n     document.body.style.backgroundColor = '#05163a';\n     showAlert(\"Dark mode has been enabled\", \"success\");\n     document.title = 'TextUtils - Dark Mode';\n     \n    } else {\n     setMode('light');\n     document.body.style.backgroundColor = 'white';\n     showAlert(\"Light mode has been enabled\", \"success\");\n     document.title = 'TextUtils - Light Mode';\n    //  setInterval(() => {\n    //  document.title = 'TextUtils is Amazing Mode';\n      \n    //  }, 2000);\n    //  setInterval(() => {\n    //  document.title = 'Install TextUtils Now';\n      \n    //  }, 1500);\n     \n    } \n   }\n\n  return (\n  <>\n   { /* <Navbar title = \"TextUtils\" aboutText='About' /> */ }\n{/* <Router> */}\n<Navbar title = \"TextUtils\" mode={mode} toggleMode = {toggleMode}  aboutText =\"About\"/>\n{/* <About/> */}\n<Alert alert={alert}/>\n<div className = \"container my-3\"> \n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n<TextForm showAlert={showAlert} heading = \"Enter the Text to Analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n         \n         \n      </div>\n      {/* </Router> */}\n \n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}